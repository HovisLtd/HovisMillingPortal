@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "TestHeaderGrid";
        settings.CallbackRouteValues = new { Controller = "UMQC", Action = "TestHeaderGridViewPartial" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.Width = System.Web.UI.WebControls.Unit.Pixel(80);
        settings.CommandColumn.MinWidth = 80;
        //settings.SettingsCommandButton.NewButton.ButtonType = GridCommandButtonRenderMode.Image;
        //settings.SettingsCommandButton.NewButton.Image.Url = "~/Content/Img/Button_Add_Icon_16.png";

        //GridViewCommandColumnCustomButton btnEditHeader = new GridViewCommandColumnCustomButton();
        //btnEditHeader.ID = "btnEditHeader";
        //btnEditHeader.Image.Url = "~/Content/Img/Edit_Icon_16.png";
        //btnEditHeader.Image.ToolTip = "View/Edit Bacs Details";
        //settings.CommandColumn.CustomButtons.Add(btnEditHeader);

        //GridViewCommandColumnCustomButton btnAuthorise = new GridViewCommandColumnCustomButton();
        //btnAuthorise.ID = "btnAuthorise";
        //btnAuthorise.Image.Url = "~/Content/Img/Open_Folder_Info_Icon_16.png";
        //btnAuthorise.Image.ToolTip = "Flag To Treasury";
        //settings.CommandColumn.CustomButtons.Add(btnAuthorise);

        //GridViewCommandColumnCustomButton btnAuthoriseReject = new GridViewCommandColumnCustomButton();
        //btnAuthoriseReject.ID = "btnAuthoriseReject";
        //btnAuthoriseReject.Image.Url = "~/Content/Img/Delete_Icon_16.png";
        //btnAuthoriseReject.Image.ToolTip = "Reject";
        //settings.CommandColumn.CustomButtons.Add(btnAuthoriseReject);

        //GridViewCommandColumnCustomButton btnTreasury = new GridViewCommandColumnCustomButton();
        //btnTreasury.ID = "btnTreasury";
        //btnTreasury.Image.Url = "~/Content/Img/Check_Icon_16.png";
        //btnTreasury.Image.ToolTip = "Authorise";
        //settings.CommandColumn.CustomButtons.Add(btnTreasury);

        //GridViewCommandColumnCustomButton btnTreasuryReject = new GridViewCommandColumnCustomButton();
        //btnTreasuryReject.ID = "btnTreasuryReject";
        //btnTreasuryReject.Image.Url = "~/Content/Img/Delete_Icon_16.png";
        //btnTreasuryReject.Image.ToolTip = "Reject";
        //settings.CommandColumn.CustomButtons.Add(btnTreasuryReject);

        //GridViewCommandColumnCustomButton btnSOGetKey = new GridViewCommandColumnCustomButton();
        //btnSOGetKey.ID = "btnSOGetKey";
        //btnSOGetKey.Image.Url = "~/Content/Img/Document_Add_Icon_16.png";
        //btnSOGetKey.Image.ToolTip = "Edit Standing Order Template";
        //settings.CommandColumn.CustomButtons.Add(btnSOGetKey);

        settings.CommandColumn.SetHeaderCaptionTemplateContent(c => {
            Html.DevExpress().HyperLink(hl =>
            {
                hl.Name = "hlNew_"; // + c.KeyValue.ToString();
                hl.NavigateUrl = "javascript:;";
                hl.Properties.Text = "New";
                hl.ToolTip = "New Bacs Submission";
                hl.Properties.ImageUrl = "~/Content/Img/Button_Add_Icon_16.png";
                hl.Properties.ClientSideEvents.Click = string.Format("function(s, e) {{ window.location.href = '{0}' }}", DevExpressHelper.GetUrl(new { Controller = "UMQC", Action = "Create" }));
            }).Render();
        });

        settings.CommandColumn.ShowEditButton = false;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowNewButtonInHeader = false;

        //settings.ClientSideEvents.CustomButtonClick = string.Format("function(s, e) {{ BacsHeaderbtn(s, e, '{0}','{1}','{2}','{3}'); }}", DevExpressHelper.GetUrl(new { Controller = "BacsDetails", Action = "IndexBacsDetails" }), DevExpressHelper.GetUrl(new { Controller = "BacsDetails", Action = "IndexAuthorise" }), DevExpressHelper.GetUrl(new { Controller = "BacsDetails", Action = "IndexTreasuryAuthorise" }), DevExpressHelper.GetUrl(new { Controller = "BacsDetails", Action = "IndexTreasuryReject" }));

        //settings.CustomButtonInitialize = (s, e) =>
        //{
        //    if (e.CellType == GridViewTableCommandCellType.Filter) return;

        //    MVCxGridView g = s as MVCxGridView;
        //    var NeedsAuthorise = g.GetRowValues(e.VisibleIndex, "StageFlag").ToString();
        //    if (e.ButtonID == "btnEditHeader")
        //    {
        //        if (NeedsAuthorise == "1")
        //        {
        //            if (User.IsInRole("Admin") || User.IsInRole("BacsClerk") || User.IsInRole("BacsSupervisor"))
        //                e.Visible = DefaultBoolean.True;
        //            else
        //                e.Visible = DefaultBoolean.False;

        //            e.Text = "";
        //        }
        //        else
        //        {
        //            e.Visible = DefaultBoolean.False;
        //            e.Text = "";
        //        }

        //    }
        //    if (e.ButtonID == "btnAuthorise")
        //    {
        //        if (NeedsAuthorise == "1")
        //        {
        //            if (User.IsInRole("BacsClerk"))
        //                e.Visible = DefaultBoolean.True;
        //            else
        //                e.Visible = DefaultBoolean.False;

        //            e.Text = "";
        //        }
        //        else
        //        {
        //            e.Visible = DefaultBoolean.False;
        //            e.Text = "";
        //        }
        //    }
        //    if (e.ButtonID == "btnTreasuryReject")
        //    {
        //        if (NeedsAuthorise == "2")
        //        {
        //            if (User.IsInRole("BacsAuthorise"))
        //                e.Visible = DefaultBoolean.True;
        //            else
        //                e.Visible = DefaultBoolean.False;

        //            e.Text = "";
        //        }
        //        else
        //        {
        //            e.Visible = DefaultBoolean.False;
        //            e.Text = "";
        //        }
        //    }
        //    if (e.ButtonID == "btnTreasury")
        //    {
        //        if (NeedsAuthorise == "2")
        //        {
        //            if (User.IsInRole("BacsAuthorise"))
        //                e.Visible = DefaultBoolean.True;
        //            else
        //                e.Visible = DefaultBoolean.False;

        //            e.Text = "";
        //        }
        //        else
        //        {
        //            e.Visible = DefaultBoolean.False;
        //            e.Text = "";
        //        }
        //    }
        //};

        //settings.HtmlRowPrepared = (s, e) =>
        //{
        //    if (e.KeyValue != null)
        //    {
        //        if (Convert.ToString(e.GetValue("RejectedFlag")) == "1")
        //        {
        //            e.Row.BackColor = System.Drawing.Color.IndianRed;
        //            //e.Row.ForeColor = System.Drawing.Color.Salmon;
        //        }
        //        if (Convert.ToString(e.GetValue("StageFlag")) == "3")
        //        {
        //            e.Row.BackColor = System.Drawing.Color.LightSeaGreen;
        //            //e.Row.ForeColor = System.Drawing.Color.Salmon;
        //        }
        //        if (Convert.ToString(e.GetValue("StageFlag")) == "4")
        //        {
        //            e.Row.BackColor = System.Drawing.Color.LightGreen;
        //            //e.Row.ForeColor = System.Drawing.Color.Salmon;
        //        }
        //        if (Convert.ToString(e.GetValue("StageFlag")) == "2")
        //        {
        //            e.Row.BackColor = System.Drawing.Color.Orange;
        //            //e.Row.ForeColor = System.Drawing.Color.Salmon;
        //        }
        //    }
        //};

        settings.KeyFieldName = "ResultHeaderRecid";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowFilterRowMenu = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;
        //settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Disabled;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsBehavior.AutoFilterRowInputDelay = 3600;

        settings.SettingsCookies.Enabled = true;
        settings.SettingsCookies.CookiesID = "ResultHeaderGridLayout";

        //settings.ClientSideEvents.CustomizationWindowCloseUp = "BacsHeaderGrid_CustomizationWindowCloseUp";
        settings.SettingsPager.PageSize = 20;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        //settings.HtmlDataCellPrepared = (sender, e) =>
        //{
        //    if (e.DataColumn.FieldName == "AccountName")
        //        if (e.CellValue != null)
        //            e.Cell.ToolTip = e.CellValue.ToString();
        //    if (e.DataColumn.FieldName == "Address1")
        //        if (e.CellValue != null)
        //            e.Cell.ToolTip = e.CellValue.ToString();
        //};

        settings.Columns.Add(column =>
        {
            column.FieldName = "ResultPlantRecid";
            column.Caption = "Plant";
            //column.Width = 80;
            column.Visible = true;
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = ViewBag.Plant;
            comboBoxProperties.ValueType = typeof(int);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "ResultFuncRecid";
            column.Caption = "Function";
            column.Visible = true;
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = ViewBag.Function;
            comboBoxProperties.ValueType = typeof(int);

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "ResultCreationDate";
            column.Caption = "Created";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            var dateeditProperties = column.PropertiesEdit as DateEditProperties;
            dateeditProperties.DisplayFormatString = "dd/MM/yyyy HH:mm";
            //column.Width = 80;
            //column.Visible = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "ResultShiftRecid";
            column.Caption = "Shift";
            column.Visible = true;
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = ViewBag.Shift;
            comboBoxProperties.ValueType = typeof(int);

        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "ResultJobNo";
            //c.Width = 80;
            //c.VisibleIndex = 2;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "ResultBinNumber";
            //c.Width = 80;
            //c.VisibleIndex = 3;
            c.Visible = true;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "ResultRunStart";
            column.Caption = "Run Start";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            var dateeditProperties = column.PropertiesEdit as DateEditProperties;
            dateeditProperties.DisplayFormatString = "dd/MM/yyyy HH:mm";
            //column.Width = 80;
            //column.Visible = false;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "ResultRunEnd";
            column.Caption = "Run End";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            var dateeditProperties = column.PropertiesEdit as DateEditProperties;
            dateeditProperties.DisplayFormatString = "dd/MM/yyyy HH:mm";
            //column.Width = 80;
        });

        settings.Columns.Add(c => { c.FieldName = "ResultCreationBy"; c.Caption = "CreatedBy"; c.Visible = false; });
        settings.Columns.Add(c => { c.FieldName = "ResultLastChangedBy"; c.Caption = "LastChangedBy"; c.Visible = false; });
        settings.Columns.Add(column =>
        {
            column.FieldName = "ResultLastChangedDate";
            column.Caption = "Last Changed Date";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            var dateeditProperties = column.PropertiesEdit as DateEditProperties;
            dateeditProperties.DisplayFormatString = "dd/MM/yyyy HH:mm";
            //column.Width = 80;
            column.Visible = false;
        });

        //settings.Columns.Add(c => { c.FieldName = "t_SOP_Customer_Group.CustGroupDesc"; c.Visible = false; });
    });
    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()