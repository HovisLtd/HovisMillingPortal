@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "BacsCustomerGrid";
        settings.CallbackRouteValues = new { Controller = "BacsCustomer", Action = "GridViewPartial" };

        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.Width = System.Web.UI.WebControls.Unit.Pixel(80);
        settings.CommandColumn.MinWidth = 80;
        //settings.SettingsCommandButton.NewButton.ButtonType = GridCommandButtonRenderMode.Image;
        //settings.SettingsCommandButton.NewButton.Image.Url = "~/Content/Img/Button_Add_Icon_16.png";

        GridViewCommandColumnCustomButton btnEditCust = new GridViewCommandColumnCustomButton();
        btnEditCust.ID = "btnEditCust";
        btnEditCust.Image.Url = "~/Content/Img/Edit_Icon_16.png";
        btnEditCust.Image.ToolTip = "Edit Customer";
        settings.CommandColumn.CustomButtons.Add(btnEditCust);

        //GridViewCommandColumnCustomButton btnNewOrder = new GridViewCommandColumnCustomButton();
        //btnNewOrder.ID = "btnNewOrder";
        //btnNewOrder.Image.Url = "~/Content/Img/Open_Folder_Add_Icon_16.png";
        //btnNewOrder.Image.ToolTip = "New Order";
        //settings.CommandColumn.CustomButtons.Add(btnNewOrder);

        //GridViewCommandColumnCustomButton btnSOGetKey = new GridViewCommandColumnCustomButton();
        //btnSOGetKey.ID = "btnSOGetKey";
        //btnSOGetKey.Image.Url = "~/Content/Img/Document_Add_Icon_16.png";
        //btnSOGetKey.Image.ToolTip = "Edit Standing Order Template";
        //settings.CommandColumn.CustomButtons.Add(btnSOGetKey);

        settings.CommandColumn.SetHeaderCaptionTemplateContent(c => {
            Html.DevExpress().HyperLink(hl =>
            {
                hl.Name = "hlNew_"; // + c.KeyValue.ToString();
                hl.NavigateUrl = "javascript:;";
                hl.Properties.Text = "New";
                hl.ToolTip = "New Customer";
                hl.Properties.ImageUrl = "~/Content/Img/Button_Add_Icon_16.png";
                hl.Properties.ClientSideEvents.Click = string.Format("function(s, e) {{ window.location.href = '{0}' }}", DevExpressHelper.GetUrl(new { Controller = "BacsCustomer", Action = "Create" }));
            }).Render();
        });

        settings.CommandColumn.ShowEditButton = false;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowNewButtonInHeader = false;

        settings.ClientSideEvents.CustomButtonClick = string.Format("function(s, e) {{ BacsCustomerbtn(s, e, '{0}'); }}", DevExpressHelper.GetUrl(new { Controller = "BacsCustomer", Action = "Edit" }));

        settings.CustomButtonInitialize = (s, e) =>
        {
            if (e.CellType == GridViewTableCommandCellType.Filter) return;

            MVCxGridView g = s as MVCxGridView;
            if (e.ButtonID == "btnEditCust")
            {
                e.Text = "";
            }
        };

        settings.KeyFieldName = "CustomerRecid";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowFilterRowMenu = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;
        //settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Disabled;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsBehavior.AutoFilterRowInputDelay = 3600;

        settings.SettingsCookies.Enabled = true;
        settings.SettingsCookies.CookiesID = "BacsCustomerGridLayout";

        settings.ClientSideEvents.CustomizationWindowCloseUp = "BacsCustomerGrid_CustomizationWindowCloseUp";
        settings.SettingsPager.PageSize = 20;

        //settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        //settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        //settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        //settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        //settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
        settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;

        //settings.HtmlDataCellPrepared = (sender, e) =>
        //{
        //    if (e.DataColumn.FieldName == "AccountName")
        //        if (e.CellValue != null)
        //            e.Cell.ToolTip = e.CellValue.ToString();
        //    if (e.DataColumn.FieldName == "Address1")
        //        if (e.CellValue != null)
        //            e.Cell.ToolTip = e.CellValue.ToString();
        //};

        settings.Columns.Add(column =>
        {
            column.FieldName = "Status";
            column.Caption = "Status";
            //column.Width = 80;
            column.Visible = true;
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = ViewBag.Status;
            comboBoxProperties.ValueType = typeof(int);
            column.AdaptivePriority = 2;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "CustomerNo";
            c.AdaptivePriority = 1;
            //c.Width = 80;
            //c.VisibleIndex = 2;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "SortingCode";
            c.Caption = "Sorting Code";
            c.ColumnType = MVCxGridViewColumnType.TextBox;
            var textBoxProperties = c.PropertiesEdit as TextBoxProperties;
            textBoxProperties.DisplayFormatString = " ## - ## - ## ";
            //textBoxProperties.ValidationSettings.Display = Display.Dynamic;
            //textBoxProperties.MaskSettings.Mask = "00-00-00";
            //c.Width = 80;
            //c.VisibleIndex = 3;
            c.Visible = true;
            c.AdaptivePriority = 2;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "BankAccountNo";
            c.AdaptivePriority = 1;
            //c.Width = 280;
            //c.VisibleIndex = 4;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "BankAccountName";
            c.Width = 280;
            c.AdaptivePriority = 2;
            //c.VisibleIndex = 4;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "BankMandateDate";
            c.AdaptivePriority = 2;
            //c.Width = 80;
            //c.VisibleIndex = 4;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "DDFrequency";
            column.Caption = "DDFrequency";
            column.Visible = true;
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = ViewBag.DDFrequency;
            comboBoxProperties.ValueType = typeof(int);
            column.AdaptivePriority = 2;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "NewBankMandate";
            column.Caption = "NewBankMandate";
            column.Visible = true;
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = ViewBag.NewBankMandate;
            comboBoxProperties.ValueType = typeof(int);
            column.AdaptivePriority = 2;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "FirstClaim";
            c.AdaptivePriority = 2;
            //c.Width = 80;
            //c.VisibleIndex = 4;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "SecondClaim";
            c.AdaptivePriority = 2;
            //c.Width = 80;
            //c.VisibleIndex = 4;
        });

        settings.Columns.Add(c => { c.FieldName = "CreatedBy"; c.Caption = "CreatedBy"; c.Visible = false; c.AdaptivePriority = 2; });
        settings.Columns.Add(c => { c.FieldName = "LastChangedBy"; c.Caption = "LastChangedBy"; c.Visible = false; c.AdaptivePriority = 2; });
        settings.Columns.Add(column =>
        {
            column.FieldName = "CreatedDate";
            column.Caption = "Created Date";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            var dateeditProperties = column.PropertiesEdit as DateEditProperties;
            //column.Width = 80;
            column.Visible = false;
            column.AdaptivePriority = 2;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "LastChangedDate";
            column.Caption = "Last Changed";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            var dateeditProperties = column.PropertiesEdit as DateEditProperties;
            //column.Width = 80;
            column.Visible = false;
            column.AdaptivePriority = 2;
        });
        //settings.Columns.Add(c => { c.FieldName = "t_SOP_Customer_Group.CustGroupDesc"; c.Visible = false; });


    });
    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()